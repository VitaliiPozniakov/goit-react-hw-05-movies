{"version":3,"file":"static/js/review-page.e8bda060.chunk.js","mappings":"wSAEaA,EAAOC,EAAAA,EAAAA,GAAH,0BAIJC,EAAOD,EAAAA,EAAAA,GAAH,kMAUJE,EAAQF,EAAAA,EAAAA,GAAH,kEAKLG,EAAOH,EAAAA,EAAAA,EAAH,0B,SCjBjB,SAASI,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QACrB,OACE,SAACC,EAAA,EAAD,WACE,SAACP,EAAD,UACGM,EAAQE,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAC1B,OACE,UAACT,EAAD,YACE,SAACC,EAAD,UAAQO,KACR,SAACN,EAAD,UAAOO,MAFEF,UAWvBJ,EAAYO,UAAY,CACtBN,QAASO,IAAAA,QACPA,IAAAA,MAAgB,CACdJ,GAAII,IAAAA,OACJH,OAAQG,IAAAA,OACRF,KAAME,IAAAA,UAERC,YAGJ,QCaA,MAtCA,WACE,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOX,EAAP,KAAgBY,EAAhB,KA2BA,OAzBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,wGAC4BC,EAAAA,GAAsBL,GADlD,gBACUM,EADV,EACUA,QACFC,EAAe,GAErBD,EAAQb,KAAI,YAA8B,IAClCe,EAAS,CACbd,GAFqC,EAA1BA,GAGXC,OAHqC,EAAtBA,OAIfC,KAJqC,EAAda,SAOzB,OAAOF,EAAaG,KAAKF,MAG3BL,EAAWI,GAdb,4CADc,sBAkBd,KAlBe,WAAD,wBAmBZI,GACA,MAAOC,OAGR,CAACZ,IAEGT,GAAWA,EAAQsB,OAAS,GACjC,SAAC,EAAD,CAAatB,QAASA,KAEtB,SAACC,EAAA,EAAD,WACE,yE,mLCvCAsB,EAAU,mCACVC,EAAW,6BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,cACQE,EADR,yBAESA,EAASC,GAAKD,EAASE,OAASC,QAAQC,OAAO,IAAIC,MAAM,eAFlE,mEAKO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBD,EADwB,uCACeD,IAIvC,SAASa,EAAYC,GAC1B,OAAOZ,EAAuB,GAAD,OACxBD,EADwB,mCACWD,EADX,kBAC4Bc,EAD5B,+CAKxB,SAASC,EAAkB7B,GAChC,OAAOgB,EAAuB,GAAD,OACxBD,EADwB,oBACJf,EADI,oBACec,EADf,oBAKxB,SAASgB,EAAkB9B,GAChC,OAAOgB,EAAuB,GAAD,OACxBD,EADwB,oBACJf,EADI,4BACuBc,EADvB,oBAKxB,SAASiB,EAAkB/B,GAChC,OAAOgB,EAAuB,GAAD,OACxBD,EADwB,oBACJf,EADI,4BACuBc,EADvB","sources":["components/ReviewsList/ReviewsList.styled.jsx","components/ReviewsList/ReviewsList.js","pages/Reviews.js","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n\n`;\n\nexport const Item = styled.li`\n&:not(:last-child){\n    margin-bottom: 10px;\n\n    border: 1px solid rgba(238, 238, 238, 1);\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n}\n`;\n\nexport const Title = styled.h2`\ntext-align: center;\nmargin-bottom: 5px;\n`;\n\nexport const Text = styled.p`\n\n`;","import propTypes from 'prop-types';\nimport Container from 'components/Container';\nimport { List, Item, Title, Text } from './ReviewsList.styled';\n\nfunction ReviewsList({ reviews }) {\n  return (\n    <Container>\n      <List>\n        {reviews.map(({ id, author, text }) => {\n          return (\n            <Item key={id}>\n              <Title>{author}</Title>\n              <Text>{text}</Text>\n            </Item>\n          );\n        })}\n      </List>\n    </Container>\n  );\n}\n\nReviewsList.prototype = {\n  reviews: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string,\n      author: propTypes.string,\n      text: propTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default ReviewsList;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../services/api';\nimport ReviewsList from 'components/ReviewsList';\nimport Container from 'components/Container';\n\nfunction ReviewsPage() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    async function fetchAndSetDataFromBackend() {\n      const { results } = await API.fetchMovieReviews(movieId);\n      const reviewsArray = [];\n\n      results.map(({ id, author, content }) => {\n        const review = {\n          id,\n          author,\n          text: content,\n        };\n\n        return reviewsArray.push(review);\n      });\n\n      setReviews(reviewsArray);\n    }\n\n    try {\n      fetchAndSetDataFromBackend();\n    } catch (err) {\n      //   setError(err.message);\n    }\n  }, [movieId]);\n\n  return reviews && reviews.length > 0 ? (\n    <ReviewsList reviews={reviews} />\n  ) : (\n    <Container>\n      <p>We don't have any reviews for this movie.</p>\n    </Container>\n  );\n}\n\nexport default ReviewsPage;\n","const API_KEY = 'c82323a9bebf6624949ce9fae3cb7c73';\nconst BASE_URL = 'https://api.themoviedb.org';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const responce = await fetch(url, config);\n  return responce.ok ? responce.json() : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/3/trending/all/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovies(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n"],"names":["List","styled","Item","Title","Text","ReviewsList","reviews","Container","map","id","author","text","prototype","propTypes","isRequired","movieId","useParams","useState","setReviews","useEffect","API","results","reviewsArray","review","content","push","fetchAndSetDataFromBackend","err","length","API_KEY","BASE_URL","fetchWithErrorHandling","url","config","fetch","responce","ok","json","Promise","reject","Error","fetchTrending","fetchMovies","query","fetchMovieDetails","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}