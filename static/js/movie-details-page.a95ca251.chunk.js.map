{"version":3,"file":"static/js/movie-details-page.a95ca251.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.js","pages/MovieDetails.js","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\n\nexport const BtnGoBack = styled.button`\npadding: 5px 10px;\ncolor: black;\nbackground-color: #ffffffff;\nfont-weight: 700;\nfont-size: 12px;\nline-height: 1.88;\nletter-spacing: 0.06em;\nborder: none;\nborder-radius: 4px;\nborder: 1px solid rgba(238, 238, 238, 1);\nbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\nwidth: 135px;\nheight: 40px;\nmargin-bottom: 10px;\n\ntransition: color, background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n&:hover,\n&:focus {\n  background-color: #3f51b5;\n  color: #ffffffff;\n}\n  \n`;\n\nexport const Label = styled.span`\n\n`;\n\nexport const MainWrapper = styled.div`\nmargin-bottom: 10px;\n@media (min-width: 768px) {\n  display: flex;\n  justify-content: space-between;\n}\n\nbox-shadow: 0px 2px 1px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n    0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n\n`;\n\nexport const Poster = styled.img`\nwidth: 250 px;\n@media (min-width: 768px) {\n    width: 300px;\n    margin-right: 10px;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\nmargin-bottom: 30px;\n\n\n\n\n`;\n\n\n\nexport const Title = styled.h2`\nfont-size: 30px;\ncolor: ;\nmargin-bottom: 15px;\n\n`;\n\nexport const VoteAverage = styled.p`\nmargin-bottom: 10px;\n`;\n\nexport const SubTitle = styled.span`\nfont-size: 15px;\nfont-weight: 700;\nmargin-right: 2px;\n`;\n\nexport const ReleaseDate = styled.p`\nmargin-bottom: 10px;\n\n`;\n\nexport const GenresList = styled.ul`\nmargin-bottom: 30px;\ndisplay: flex;\n\n`;\n\nexport const GenresItem = styled.li`\nfont-weight: 400;\nfont-size: 15px;\nmargin-right: 2px;\n:last-child {\n  margin-right: 0;\n}\n\n`;\n\nexport const Description = styled.p`\nfont-size: 15px;\nmargin-bottom: 50px;\n\n`;\n\n\n\n\n\nexport const AdditionalWrapper = styled.div`\nbox-shadow: 0px 2px 1px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n    0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n  padding: 10px;\n`;\n\nexport const AdditionalTitle = styled.p`\nfont-size: 18px;\nfont-weight: 700;\nmargin-bottom: 15px;\n\ntext-align: center;\n`;\n\nexport const NavigationsList = styled.ul`\nlist-style: square;\nmargin-left: 15px;\n`;\n\nexport const NavigationsItem = styled.li`\nmargin-bottom: 15px;\n:last-child {\n  margin-bottom: 0;\n}\n`;\n\nexport const CustomLink = styled(NavLink)`\ndisplay: inline-block;\ntext-decoration: none;\n\ncolor: #2a363b;\n  font-size: 15px;\n  font-weight: 700;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.active {\n    color: #3f51b5;\n    text-decoration: underline;\n  }\n\n  &:hover{\n      color: #3f51b5;\n  }\n`;\n\n","// import { useLocation, useNavigate } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Container from 'components/Container';\nimport { TiArrowBack } from \"react-icons/ti\";\n\nimport {\n  BtnGoBack,\n  Label,\n  MainWrapper,\n  Poster,\n  InfoWrapper,\n  Title,\n  ReleaseDate,\n  GenresList,\n  GenresItem,\n  Description,\n  VoteAverage,\n  SubTitle,\n  AdditionalWrapper,\n  AdditionalTitle,\n  NavigationsList,\n  NavigationsItem,\n  CustomLink,\n} from './MovieDetails.styled';\n\n\nfunction MovieDetails({ movieInfo }) {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const subLocation = location?.state?.from;\n\n// console.log(subLocation)\n\n  const {\n    title,\n    genres,\n    description,\n    poster,\n    releaseDate,\n    voteAverage,\n  } = movieInfo;\n\n  const onGoBackBtn = () => navigate(location?.state?.from ?? '/');\n\nconst userScore = voteAverage * 10\n\n  return (\n    <Container>\n      <BtnGoBack type=\"button\" onClick={onGoBackBtn}>\n       \n        <Label><TiArrowBack/> Go back</Label>\n      </BtnGoBack>\n\n      <MainWrapper>\n        <Poster\n          src={`https://image.tmdb.org/t/p/w500/${poster}` }\n          alt={title}\n        />\n        <InfoWrapper>\n        \n            <Title>{title}</Title>\n            <ReleaseDate><SubTitle>Release date:</SubTitle>{releaseDate}</ReleaseDate>\n            <VoteAverage> <SubTitle>User Score:</SubTitle>{userScore}%</VoteAverage>\n        \n          <GenresList> <SubTitle>Genres:</SubTitle>\n            {genres &&\n              genres.map(({ name, id }) => (\n                <GenresItem key={id}> {name}, </GenresItem>\n              ))}\n          </GenresList>\n          <Description>Overview: {description}</Description>\n         \n        </InfoWrapper>\n      </MainWrapper>\n\n      <AdditionalWrapper>\n        <AdditionalTitle>Additional Information:</AdditionalTitle>\n        <NavigationsList>\n          <NavigationsItem>\n            <CustomLink to=\"cast\" state={{ from: subLocation }}>\n        Cast\n            </CustomLink>\n          </NavigationsItem>\n          <NavigationsItem>\n            <CustomLink to=\"reviews\" state={{ from: subLocation }}>\n             Reviews\n            </CustomLink>\n          </NavigationsItem>\n        </NavigationsList>\n      </AdditionalWrapper>\n    </Container>\n  );\n}\n\nMovieDetails.prototype = {\n  movieInfo: propTypes.shape({\n    title: propTypes.string,\n    genres: propTypes.arrayOf(\n      propTypes.shape({\n        id: propTypes.number,\n        name: propTypes.string,\n      }),\n    ),\n    description: propTypes.string,\n    poster: propTypes.string,\n    releaseDate: propTypes.string,\n    voteAverage: propTypes.number,\n    voteCount: propTypes.number,\n  }),\n};\n\nexport default MovieDetails;\n\n","import { useState, useEffect, lazy, Suspense } from 'react';\nimport { useParams, Route, Routes } from 'react-router-dom';\nimport * as API from '../services/api';\nimport MovieDetails from 'components/MovieDetails';\nimport Loader from 'components/Loader';\nconst CastPage = lazy(() =>\n  import('./Cast.js' /* webpackChunkName: \"cast-page\" */)\n);\nconst ReviewsPage = lazy(() =>\n  import('./Reviews.js' /* webpackChunkName: \"review-page\" */)\n);\n\nfunction MovieDetailsPage() {\n  // console.log(useParams())\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n\n  useEffect(() => {\n    async function fetchAndSetDataFromBackend() {\n      const fetchMovieDetails = await API.fetchMovieDetails(movieId);\n      const {\n        original_title,\n        genres,\n        overview,\n        poster_path,\n        release_date,\n        vote_average,\n      } = fetchMovieDetails;\n\n      // console.log(fetchMovieDetails);\n\n      const movieInfo = {\n        title: original_title,\n        genres: genres,\n        description: overview,\n        poster: poster_path,\n        releaseDate: release_date,\n        voteAverage: vote_average,\n      };\n      setMovieInfo(movieInfo);\n    }\n\n    try {\n      fetchAndSetDataFromBackend();\n    } catch (err) {\n      //   setError(err.message);\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {movieInfo && <MovieDetails movieInfo={movieInfo} />}\n\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"cast\" element={<CastPage />} />\n          <Route path=\"reviews\" element={<ReviewsPage />} />\n        </Routes>\n      </Suspense>\n    </>\n  );\n}\n\nexport default MovieDetailsPage;\n","const API_KEY = 'c82323a9bebf6624949ce9fae3cb7c73';\nconst BASE_URL = 'https://api.themoviedb.org';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const responce = await fetch(url, config);\n  return responce.ok ? responce.json() : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/3/trending/all/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovies(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n"],"names":["BtnGoBack","styled","Label","MainWrapper","Poster","InfoWrapper","Title","VoteAverage","SubTitle","ReleaseDate","GenresList","GenresItem","Description","AdditionalWrapper","AdditionalTitle","NavigationsList","NavigationsItem","CustomLink","NavLink","MovieDetails","movieInfo","location","useLocation","navigate","useNavigate","subLocation","state","from","title","genres","description","poster","releaseDate","userScore","voteAverage","Container","type","onClick","src","alt","map","name","id","to","prototype","propTypes","voteCount","CastPage","lazy","ReviewsPage","movieId","useParams","useState","setMovieInfo","useEffect","API","fetchMovieDetails","original_title","overview","poster_path","release_date","vote_average","fetchAndSetDataFromBackend","err","Suspense","fallback","Loader","path","element","API_KEY","BASE_URL","fetchWithErrorHandling","url","config","fetch","responce","ok","json","Promise","reject","Error","fetchTrending","fetchMovies","query","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}